name: License and Header Check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  license_and_header_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install ScanCode Toolkit
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install scancode-toolkit

      - name: Find all .g4 files
        id: find_g4_files
        run: |
          # Suche nach allen .g4-Dateien und speichere die Pfade in g4_files.txt
          find $GITHUB_WORKSPACE -name "*.g4" > g4_files.txt
          # ZÃ¤hle die Anzahl der gefundenen Dateien
          file_count=$(wc -l < g4_files.txt)
          echo "Anzahl der gefundenen .g4-Dateien: $file_count"
          # Setze den Output-Wert 'files_found' entsprechend
          if [ "$file_count" -gt 0 ]; then
            echo "files_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "files_found=false" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

      - name: Create temporary directory for .g4 files
        run: mkdir -p $GITHUB_WORKSPACE/temp_g4_files
        shell: bash

      - name: Copy .g4 files to temporary directory
        if: steps.find_g4_files.outputs.files_found == 'true'
        run: |
          while IFS= read -r file; do
            cp "$file" $GITHUB_WORKSPACE/temp_g4_files/
          done < g4_files.txt
        shell: bash

      - name: Set environment variables
        run: |
          echo "SCANCODE_RESULTS_DIR=$GITHUB_WORKSPACE/scancode_results" >> $GITHUB_ENV
          echo "G4_FILES_LIST=$GITHUB_WORKSPACE/g4_files.txt" >> $GITHUB_ENV


      - name: Run ScanCode Toolkit on .g4 files
        if: steps.find_g4_files.outputs.files_found == 'true'
        run: |
          scancode -cl --json-pp "scancode_results.json" $GITHUB_WORKSPACE/temp_g4_files/
        shell: bash

      - name: Upload ScanCode reports
        uses: actions/upload-artifact@v4
        with:
          name: scancode-reports
          path: ./scancode_results.json

      - name: Create scancode_results directory
        run: mkdir -p $GITHUB_WORKSPACE/scancode_results

      - name: Move ScanCode report to scancode_results directory
        run: mv $GITHUB_WORKSPACE/scancode_results.json $GITHUB_WORKSPACE/scancode_results/

      - name: Run check for license and specific header
        run: python3 scripts/license_check.py

      - name: Upload g4 files list
        uses: actions/upload-artifact@v4
        with:
          name: g4-files-list
          path: $G4_FILES_LIST

      - name: Check for license and header check report
        if: always()
        run: |
          if [ -f "$GITHUB_WORKSPACE/license_and_header_check_report.json" ]; then
            echo "Report found."
          else
            echo "Report not found."
          fi
        shell: bash

      - name: Upload license and header check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-and-header-check-report
          path: $GITHUB_WORKSPACE/license_and_header_check_report.json